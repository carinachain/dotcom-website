name: Deploy dotcom website

on:
  push:
    branches:
      - main

env:
  DEPLOY_DEST_PATH: /srv/production-deploy/${{ github.repository }}
  SERVICE_NAME: carina-dotcom-website
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: |
          npm run build

      - name: Compress built artifacts
        run: |
          tar -czf ${{ runner.temp }}/built-artifacts.tar.gz .

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-artifacts
          include-hidden-files: true
          path: ${{ runner.temp }}/built-artifacts.tar.gz

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-artifacts
          path: ${{ runner.temp }}/built-artifacts

      - name: Clean destination directory
        run: rm -rf ${{ env.DEPLOY_DEST_PATH }}

      - name: Extract artifacts to destination
        run: |
          mkdir -p ${{ env.DEPLOY_DEST_PATH }}
          tar -xzf ${{ runner.temp }}/built-artifacts/built-artifacts.tar.gz -C ${{ env.DEPLOY_DEST_PATH }}

      - name: Restart service
        run: |
          sudo systemctl restart ${{ env.SERVICE_NAME }}
          sleep 5
          sudo systemctl status ${{ env.SERVICE_NAME }}